/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
        hold_tap: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none                   &kp Q  &kp W                   &kp E         &kp R                         &kp T      &kp Y      &kp U            &kp I    &kp O                        &kp P  &none
&none                   &kp A  &kp S                   &kp D         &kp F                         &kp G      &kp H      &kp J            &kp K    &kp L                     &kp SEMI  &none
&none  &hold_tap LEFT_SHIFT Z  &kp X                   &kp C         &kp V                         &kp B      &kp N      &kp M        &kp COMMA  &kp DOT  &hold_tap RIGHT_SHIFT SLASH  &none
                                      &hold_tap LCTRL ESCAPE  &kp LEFT_ALT  &hold_tap LEFT_COMMAND SPACE    &kp RET  &lt 1 TAB  &lt 2 BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none          &kp N1        &kp N2        &kp N3        &kp N4        &kp N5       &kp N6     &kp N7            &kp N8             &kp N9           &kp N0  &none
&none       &kp GRAVE  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &kp LEFT   &kp DOWN            &kp UP          &kp RIGHT    &kp SEMICOLON  &none
&none  &kp LEFT_SHIFT        &trans        &trans        &trans        &trans    &kp MINUS  &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp RIGHT_SHIFT  &none
                                         &kp LGUI        &trans     &kp SPACE      &kp RET    &lt 0 0          &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp F1  &kp F2      &kp F3            &kp F4      &kp F5        &kp F6           &kp F7             &kp F8    &kp F9   &kp F10  &none
&none  &trans  &trans  &kp K_PREV  &kp K_PLAY_PAUSE  &kp K_NEXT    &kp K_MUTE  &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &kp RBKT  &kp BSLH  &none
&none  &trans  &trans      &trans            &trans      &trans     &kp UNDER         &kp PLUS           &kp LBRC  &kp RBRC  &kp PIPE  &none
                         &kp LGUI            &trans   &kp SPACE       &kp RET           &trans           &kp RALT
            >;
        };
    };
};
